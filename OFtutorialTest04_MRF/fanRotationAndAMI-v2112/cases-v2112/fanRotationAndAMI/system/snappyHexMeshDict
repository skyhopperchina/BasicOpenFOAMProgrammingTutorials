/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2112                                 |
|   \\  /    A nd           | Website:                                        |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      snappyHexMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

castellatedMesh true;
snap            true;
addLayers       false;

geometry
{
    AMI.stl
    {
        type	    triSurfaceMesh;
        name	    AMI;
    }

    regionSTL.stl
    {
        type        triSurfaceMesh;
        regions
        {
            inlet       { name inlet; }
            outlet      { name outlet; }
            walls       { name walls; }
            fan         { name fan; }
        }
    }
};

castellatedMeshControls
{
    maxLocalCells 1000000;
    maxGlobalCells 2000000;
    minRefinementCells 0;
    maxLoadUnbalance 0.10;
    nCellsBetweenLevels 2;

    features
    (
    );

    refinementSurfaces
    {
        AMI
        {
            level       (0 0);
            faceZone    rotatingZone;
            cellZone    rotatingZone;
            cellZoneInside  inside;
        }

        regionSTL.stl
        {
            level       (0 0);
            regions
            {
                inlet   { level (0 0); type patch; }
                outlet  { level (0 0); type patch; }
                walls   { level (1 1); type wall; }
                fan     { level (1 4); type wall; }
            }
        }
    }

    resolveFeatureAngle 30;

    refinementRegions
    {
        AMI
        {
            levels ((0 2));
            mode inside;
        }
    }

    locationInMesh (0.055 0.05 0.051);

    allowFreeStandingZoneFaces true;
}

snapControls
{
    nSmoothPatch 3;
    tolerance 1.1;
    nSolveIter 100;
    nRelaxIter 5;
    nFeatureSnapIter 5;
	
	implicitFeatureSnap true;
	explicitFeatureSnap false;
	multiRegionFeatureSnap false;
}

addLayersControls
{
    relativeSizes true;

    layers
    {
    }

    expansionRatio 1.0;
    finalLayerThickness 0.3;
    minThickness 0.1;
    nGrow 0;
    featureAngle 30;
    nRelaxIter 3;
    nSmoothSurfaceNormals 1;
    nSmoothNormals 3;
    nSmoothThickness 10;
    maxFaceThicknessRatio 0.5;
    maxThicknessToMedialRatio 0.3;
    minMedianAxisAngle 90;
    nBufferCellsNoExtrude 0;
    nLayerIter 50;
}

meshQualityControls
{
    maxNonOrtho 65;

    maxBoundarySkewness 20;
    maxInternalSkewness 4;

    maxConcave 80;
    minVol 1e-13;
    minTetQuality -1;
    minArea -1;
    minTwist 0.01;
    minDeterminant 0.001;
    minFaceWeight 0.05;
    minVolRatio 0.01;
    minTriangleTwist -1;
    nSmoothScale 4;
    errorReduction 0.75;

    relaxed
    {
        maxNonOrtho 75;
    }
}

debug 0;
mergeTolerance 1e-6;

// ************************************************************************* //
